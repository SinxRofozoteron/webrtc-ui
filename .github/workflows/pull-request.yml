name: Verify pull request branch
on: pull_request

jobs:
  check-title:
    name: Check title
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pull request code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 16.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Check MR title
        uses: beemojs/conventional-pr-action@v2
        with:
          config-preset: eslint
          auto-install: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout pull request code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 16.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        run: npm run lint
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout pull request code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 16.x
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Create build
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            build
            package.json
  
  semantic-release-dry-run:
    name: Semantic Release dry run
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Print files
        run: ls
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Print branch
        run: echo ${{ steps.extract_branch.outputs.branch }}
      - name: Semantic Release dry run
        uses: cycjimmy/semantic-release-action@v3
        env: 
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          dry_run: true
          branches: |
            [
              'main',
              '${{ steps.extract_branch.outputs.branch }}'
            ]
      
{
  "env": {
    "es2020": true,
    "jest": true,
    "node": true,
    "browser": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "prettier", "import"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "project": "tsconfig.dev.json"
      },
      "node": true
    }
  },
  "overrides": [
    {
      "files": ["**/*.js", "**/*.jsx"],
      "rules": {
        "react/prop-types": "off" // Turn off prop-types rule
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parserOptions": {
        "project": ["tsconfig.dev.json"]
      },
      "rules": {
        "react/prop-types": "off",
        "@typescript-eslint/consistent-type-imports": [
          "error",
          { "prefer": "type-imports", "fixStyle": "separate-type-imports" }
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/method-signature-style": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/consistent-generic-constructors": ["error", "constructor"],
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }]
      }
    }
  ],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "prettier/prettier": [
      "error",
      {
        "printWidth": 88,
        "arrowParens": "avoid"
      }
    ],
    "max-len": [
      "error",
      {
        "code": 88,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "semi": ["error", "always"],
    "arrow-parens": ["error", "as-needed"],
    "prefer-const": ["error"],
    "react/require-default-props": "off",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": [["builtin", "external"], ["parent", "sibling", "index"], ["type"]]
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "import", "next": "expression" },
      { "blankLine": "any", "prev": "import", "next": "import" }
    ],
    "import/newline-after-import": "error",
    "import/no-unresolved": "error"
  },
  "ignorePatterns": ["build", "node_modules"]
}
